#ifndef HTML_h
#define HTML_h

/**
 * 1) Write html-code
 * 2) remove all inline comments starting with '//'
 * 3) Replace '\r' with '\ \r'
 * 4) Replace '"' with '\"'
 * 5) Copy & paste the code into '<here comes the html>'
 */


/*
*  ["]   -> [\"]  (without regex)
*
*  [\n]  -> [\\n"\n"] (with regex)
*
*
*/

const char *page1 = ""
"<!DOCTYPE HTML>\n"
"<html lang=\"en\">\n"
"<head>\n"
"    <title>Robosheep</title>\n"
"    <meta charset=\"utf-8\"/>\n"
"    <!-- <meta http-equiv=\"refresh\" content=\"5\">-->\n"
"    <style>\n"
"        #motor_speed_bars {\n"
"            width: 600px;\n"
"            padding: 10px;\n"
"            background-color: grey;\n"
"        }\n"
"\n"
"        button {\n"
"            height: 80px;\n"
"            width: 200px;\n"
"        }\n"
"\n"
"        #speedBar {\n"
"            color: green;\n"
"        }\n"
"\n"
"        progress[value] {\n"
"            width: 600px;\n"
"            height: 20px;\n"
"        }\n"
"\n"
"        progress::-webkit-progress-value {\n"
"            background: lightblue;\n"
"        }\n"
"\n"
"        progress::-moz-progress-bar {\n"
"            background: lightblue;\n"
"        }\n"
"\n"
"        progress::-webkit-progress-value {\n"
"            background: red;\n"
"        }\n"
"\n"
"        progress::-webkit-progress-bar {\n"
"            background: blue;\n"
"        }\n"
"\n"
"    </style>\n"
"</head>\n"
"<body>\n"
"\n"
"\n"
"<h1>Motordriver (Ver. 0.9)</h1>\n"
"\n"
"<div style=\"margin-right: auto; margin-left: auto; width: 800px; border: 1px solid black;\">\n"
"    <h2>Robosheep Status</h2>\n"
"    <div id=\"motor_speed_bars\">\n"
"        <!--\n"
"        Speed<progress id=\"speedBar\" value=\"100\" max=\"200\"><span>0</span>%</progress>\n"
"        <p></p>\n"
"        -->\n"
"        M1\n"
"        <progress id=\"motorBar1\" value=\"100\" max=\"200\"><span>0</span>%</progress>\n"
"        M2\n"
"        <progress id=\"motorBar2\" value=\"100\" max=\"200\"><span>0</span>%</progress>\n"
"\n"
"    </div>\n"
"    <p id=\"rssi\"></p>\n"
"    <p id=\"sheep_state\"></p>\n"
"</div>\n"
"\n"
"<div style=\"width: 800px; margin: auto; border: 1px solid black;\">\n"
"    <h2>Joystick</h2>\n"
"\n"
"    <div id=\"joystick\"\n"
"         style=\"position:relative;\n"
"            border: 1px solid black;\n"
"            width: 600px;\n"
"            height: 600px;\n"
"            -webkit-border-radius: 300px;\n"
"            -moz-border-radius: 300px;\n"
"            border-radius: 300px;\n"
"            background: green;\">\n"
"        <img id=\"ball\" src=\"https://en.js.cx/clipart/ball.svg\"\n"
"             style=\"position:absolute;\n"
"                     top:260px; left:260px; width:80px; height:80px;\"/>\n"
"    </div>\n"
"\n"
"</div>\n"
"\n"
"<div style=\"width: 800px; margin: auto; border: 1px solid black;\">\n"
"    <h2>Control</h2>\n"
"    <div onclick=\"setMousePosition(event)\" onmousemove=\"speedMotors(event)\" onmouseout=\"stop()\"></div>\n"
"    <TABLE>\n"
"        <TR>\n"
"            <TD>\n"
"                <p><label for=\"enableMotor\">Enable Motor: </label><input style=\"height:20px;width:20px\" type=\"checkbox\"\n"
"                                                                         id=\"enableMotor\"></p>\n"
"            </TD>\n"
"            <TD>\n"
"                <button onclick=\"forward()\">forward</button>\n"
"            </TD>\n"
"            <TD></TD>\n"
"        </TR>\n"
"        <TR>\n"
"            <TD>\n"
"                <button onclick=\"left()\">left</button>\n"
"            </TD>\n"
"            <TD>\n"
"                <button onclick=\"stop()\">stop</button>\n"
"            </TD>\n"
"            <TD>\n"
"                <button onclick=\"right()\">right</button>\n"
"            </TD>\n"
"        </TR>\n"
"        <TR>\n"
"            <TD></TD>\n"
"            <TD>\n"
"                <button onclick=\"backward()\">backward</button>\n"
"            </TD>\n"
"            <TD></TD>\n"
"        </TR>\n"
"        <TR>\n"
"            <TD>\n"
"                <button onclick=\"speed1()\">speed1</button>\n"
"            </TD>\n"
"            <TD>\n"
"                <button onclick=\"speed2()\">speed2</button>\n"
"            </TD>\n"
"            <TD>\n"
"                <button onclick=\"speed3()\">speed3</button>\n"
"            </TD>\n"
"        </TR>\n"
"\n"
"    </TABLE>\n"
"\n"
"</div>\n"
"\n"
"<div style=\"display: table-cell; border: 1px solid black;\">\n"
"    <h2>Log</h2>\n"
"    <p id=\"log\"></p>\n"
"</div>\n"
"\n"
"<p id=\"demo\"></p>\n"
"\n"
"<script>\n"
"\n"
"    //\n"
"    // global vars\n"
"    //\n"
"    const ip = location.host\n"
"    const url_sheep_state = \"http://\" + ip + \"/sheep/state\";\n"
"    const url_sheep_move = \"http://\" + ip + \"/sheep/move\";\n"
"    const url_motor = \"http://\" + ip + \"/motor\";\n"
"    var speed = 0;\n"
"\n"
"    //\n"
"    // motor bars\n"
"    //\n"
"    const motor_speed_bars = document.getElementById(\"motor_speed_bars\")\n"
"    const speedBar = document.getElementById('speedBar');\n"
"    const motorBar1 = document.getElementById('motorBar1');\n"
"    const motorBar2 = document.getElementById('motorBar2');\n"
"\n"
"    const rssi = document.getElementById('rssi');\n"
"    const sheepStateCtrl = document.getElementById('sheep_state');\n"
"    const log = document.getElementById('log');\n"
"\n"
"    const startX = ball.getBoundingClientRect().left;\n"
"    const startY = ball.getBoundingClientRect().top;\n"
"\n"
"\n"
"    motor_speed_bars.addEventListener(\"wheel\", motor_speed_bars_wheel);\n"
"    /*\n"
"    motor_speed_bars.addEventListener('contextmenu', function (ev) {\n"
"        ev.preventDefault();\n"
"        console.log('right mouse');\n"
"        return false;\n"
"    }, false);\n"
"     */\n"
"\n"
"    motor_speed_bars.onmousedown = function (event) {\n"
"        console.log(\"onmousedown: \" + event.button)\n"
"    }\n"
"\n"
"    function motor_speed_bars_wheel(event) {\n"
"        const delta = Math.sign(event.deltaY);\n"
"        speed = speed - delta * 10\n"
"        console.info(speed);\n"
"        speedBar.value = 100 + speed\n"
"    }\n"
"\n"
"    /*\n"
"    Update progress bars that indicate motor speed.\n"
"    Values are between -100 and 100.\n"
"     */\n"
"    function updateMotorBars(m1, m2) {\n"
"        if (m1 < -100 || m1 > 100 || m2 < -100 || m2 > 100) {\n"
"            console.error(\"Called updateMotorBars(\" + m1 + \",\" + m2 + \") with invalid values.\")\n"
"            return\n"
"        }\n"
"        motorBar1.value = 100 + m1;\n"
"        motorBar1.getElementsByTagName('span')[0].textContent = m1;\n"
"        motorBar2.value = 100 + m2;\n"
"        motorBar2.getElementsByTagName('span')[0].textContent = m2;\n"
"    }\n"
"\n"
"\n"
"    //\n"
"    // update sheep state\n"
"    //\n"
"    const intervalID = setInterval(function () {\n"
"        const Http = new XMLHttpRequest();\n"
"        Http.open(\"GET\", url_sheep_state);\n"
"        Http.responseType = 'json';\n"
"        Http.send();\n"
"        Http.onreadystatechange = function () {\n"
"            if (this.readyState === 4 && this.status === 200) {\n"
"                let sheep_state = Http.response\n"
"                updateMotorBars(parseInt(sheep_state['m1']), parseInt(sheep_state['m2']));\n"
"                var signalStrength = \"Signal Strength: \" + sheep_state['rssi'] + \" dBm\";\n"
"                rssi.innerHTML = signalStrength;\n"
"                sheepStateCtrl.innerHTML = JSON.stringify(sheep_state);\n"
"            }\n"
"        }\n"
"    }, 1000);\n"
"\n"
"\n"
"    /*\n"
"     * send command to sheep\n"
"     */\n"
"    function sendCommand(displaceX, displaceY) {\n"
"        let direction = displaceX;\n"
"        let speed = displaceY;\n"
"\n"
"        let sum = direction + speed\n"
"        let diff = direction - speed\n"
"\n"
"        if (Math.abs(sum) > 100 || Math.abs(diff) > 100) {\n"
"            console.log(\"motor speeds to high\")\n"
"            return\n"
"        }\n"
"\n"
"        // call server\n"
"        let url = url_sheep_move + \"?speed=\" + speed + \"&dir=\" + direction\n"
"        const Http = new XMLHttpRequest();\n"
"        Http.open(\"GET\", url);\n"
"        Http.responseType = 'json';\n"
"        Http.send();\n"
"        Http.onreadystatechange = function () {\n"
"            if (this.readyState === 4 && this.status === 200) {\n"
"                let sheep_state = Http.response\n"
"                updateMotorBars(parseInt(sheep_state['m1']), parseInt(sheep_state['m2']));\n"
"            }\n"
"        }\n"
"    }\n"
"\n"
"\n"
"    //\n"
"    // ball\n"
"    //\n"
"    ball.onmousedown = function (event) {\n"
"\n"
"        let shiftX = event.clientX - ball.getBoundingClientRect().left;\n"
"        let shiftY = event.clientY - ball.getBoundingClientRect().top;\n"
"\n"
"        ball.style.position = 'absolute';\n"
"        ball.style.zIndex = '1000';\n"
"        document.body.append(ball);\n"
"\n"
"        moveAt(event.pageX, event.pageY);\n"
"\n"
"        // moves the ball at (pageX, pageY) coordinates\n"
"        // taking initial shifts into account\n"
"        function moveAt(pageX, pageY) {\n"
"\n"
"            //\n"
"            // move ball image\n"
"            //\n"
"            ball.style.left = pageX - shiftX + 'px';\n"
"            ball.style.top = pageY - shiftY + 'px';\n"
"\n"
"            // calc displacement\n"
"            let displaceX = -Math.trunc((pageX - startX - shiftX) / 3);\n"
"            let displaceY = -Math.trunc((pageY - startY - shiftY) / 3);\n"
"            console.log(\"displace \" + displaceX + \"/\" + displaceY);\n"
"\n"
"            sendCommand(displaceX, displaceY)\n"
"        }\n"
"\n"
"        function onMouseMove(event) {\n"
"            moveAt(event.pageX, event.pageY);\n"
"        }\n"
"\n"
"        // move the ball on mousemove\n"
"        document.addEventListener('mousemove', onMouseMove);\n"
"\n"
"        // drop the ball, remove unneeded handlers\n"
"        ball.onmouseup = function () {\n"
"            document.removeEventListener('mousemove', onMouseMove);\n"
"            ball.onmouseup = null;\n"
"            ball.style.left = startX + 'px';\n"
"            ball.style.top = startY + 'px';\n"
"\n"
"\n"
"            const Http = new XMLHttpRequest();\n"
"            let url = url_sheep_move + \"?speed=\" + 0 + \"&dir=\" + 0\n"
"            Http.open(\"GET\", url);\n"
"            Http.responseType = 'json';\n"
"            Http.send();\n"
"            Http.onreadystatechange = function () {\n"
"                if (this.readyState === 4 && this.status === 200) {\n"
"                    let sheep_state = Http.response\n"
"                    updateMotorBars(parseInt(sheep_state['m1']), parseInt(sheep_state['m2']));\n"
"                }\n"
"            }\n"
"        };\n"
"\n"
"    };\n"
"\n"
"    /*\n"
"     * see also (https://www.mediaevent.de/javascript/touch-events.html)\n"
"     */\n"
"    ball.ontouchmove = function (e) {\n"
"        // grab the location of touch\n"
"        var touchLocation = e.targetTouches[0]; // erster finger\n"
"\n"
"        // assign box new coordinates based on the touch.\n"
"        //ball.style.left = touchLocation.pageX + 'px';\n"
"        //ball.style.top = touchLocation.pageY + 'px';\n"
"\n"
"        // calc displacement\n"
"        let displaceX = Math.trunc((startX - touchLocation.pageX) / 3);\n"
"        let displaceY = Math.trunc((startY - touchLocation.pageY) / 3);\n"
"        console.log(\"Touch displace \" + displaceX + \"/\" + displaceY);\n"
"\n"
"        var msg = \"Touch displace \" + displaceX + \"/\" + displaceY;\n"
"        log.innerHTML = msg;\n"
"\n"
"        sendCommand(displaceX, displaceY)\n"
"    }\n"
"\n"
"    ball.ontouchend = function (e) {\n"
"        sendCommand(0, 0)\n"
"    }\n"
"\n"
"    /*\n"
"    * Disable context menu\n"
"    */\n"
"    window.oncontextmenu = function (event) {\n"
"        event.preventDefault();\n"
"        event.stopPropagation();\n"
"        return false;\n"
"    };\n"
"\n"
"    /*\n"
"        ball.addEventListener('touchmove', function (e) {\n"
"            // grab the location of touch\n"
"            var touchLocation = e.targetTouches[0];\n"
"\n"
"            // assign box new coordinates based on the touch.\n"
"            //ball.style.left = touchLocation.pageX + 'px';\n"
"            // ball.style.top = touchLocation.pageY + 'px';\n"
"\n"
"            // calc displacement\n"
"            let displaceX = Math.trunc((startX - touchLocation.pageX)/3);\n"
"            let displaceY = Math.trunc((startY - touchLocation.pageY)/3);\n"
"            console.log(\"Touch displace \" + displaceX + \"/\" + displaceY);\n"
"\n"
"            sendCommand(displaceX, displaceY)\n"
"        })\n"
"    */\n"
"\n"
"    ball.ondragstart = function () {\n"
"        return false;\n"
"    };\n"
"\n"
"    function speed1() {\n"
"        speed = 25;\n"
"    }\n"
"\n"
"    function speed2() {\n"
"        speed = 50;\n"
"    }\n"
"\n"
"    function speed3() {\n"
"        speed = 100;\n"
"    }\n"
"\n"
"    function stop() {\n"
"        send(0, 0);\n"
"    }\n"
"\n"
"    function forward() {\n"
"        send(speed, speed);\n"
"    }\n"
"\n"
"    function left() {\n"
"        send(0, speed);\n"
"    }\n"
"\n"
"    function right() {\n"
"        send(speed, 0);\n"
"    }\n"
"\n"
"    function backward() {\n"
"        send(-speed, -speed);\n"
"    }\n"
"\n"
"\n"
"    var offsetX;\n"
"    var offsetY;\n"
"    var x;\n"
"    var y;\n"
"\n"
"\n"
"    function setMousePosition(event) {\n"
"        console.log(\"setMousePosition called \");\n"
"        x = event.clientX;\n"
"        y = event.clientY;\n"
"        offsetX = x;\n"
"        offsetY = y;\n"
"        var response = \"Offest (\" + x + \"/\" + y + \")\";\n"
"        document.getElementById('demo').innerHTML = response;\n"
"    }\n"
"\n"
"    function speedMotors(event) {\n"
"        x = event.clientX;\n"
"        y = event.clientY;\n"
"        var m1 = 0;\n"
"        var m2 = 0;\n"
"        if (offsetX != 0) {\n"
"            var divX = offsetX - x;\n"
"            var divY = offsetY - y;\n"
"            m1 = divY + divX;\n"
"            m2 = divY - divX;\n"
"        }\n"
"        send(m1, m2);\n"
"    }\n"
"\n"
"    function stop() {\n"
"        offsetX = 0;\n"
"        offsetY = 0;\n"
"        x = 0;\n"
"        y = 0;\n"
"        send(0, 0);\n"
"    }\n"
"\n"
"    function send(m1, m2) {\n"
"        var motorsEnabled = document.getElementById(\"enableMotor\").checked;\n"
"        var response = \"Offest (\" + offsetX + \"/\" + offsetY + \") m1:\" + m1 + \" m2:\" + m2;\n"
"        var ip = location.host;\n"
"        console.log(\"send() called\" + response);\n"
"        if (motorsEnabled) {\n"
"            var xmlHttp = new XMLHttpRequest();\n"
"            xmlHttp.open(\"GET\", \"http://\" + ip + \"/motor?m1=\" + m1 + \"&m2=\" + m2, false); // false for synchronous request\n"
"            xmlHttp.send(null);\n"
"            response = xmlHttp.responseText;\n"
"        }\n"
"        document.getElementById('demo').innerHTML = response;\n"
"    }\n"
"\n"
"</script>\n"
"</body>\n"
"</html>\n"

;


#endif
