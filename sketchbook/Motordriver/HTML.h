#ifndef HTML_h
#define HTML_h

/**
 * 1) Write html-code
 * 2) remove all inline comments starting with '//'
 * 3) Replace '\r' with '\ \r'
 * 4) Replace '"' with '\"'
 * 5) Copy & paste the code into '<here comes the html>'
 */


/*
*  ["]   -> [\"]  (without regex)
*
*  [\n]  -> [\\n"\n"] (with regex)
*
*
*/


const String postForms = "<html>\
  <head>\
    <title>ESP8266 Web Server POST handling</title>\
    <style>\
      body { background-color: #cccccc; font-family: Arial, Helvetica, Sans-Serif; Color: #000088; }\
    </style>\
  </head>\
  <body>\
    <h1>POST plain text to /postplain/</h1><br>\
    <form method=\"post\" enctype=\"text/plain\" action=\"/postplain/\">\
      <input type=\"text\" name=\'{\"hello\": \"world\", \"trash\": \"\' value=\'\"}\'><br>\
      <input type=\"submit\" value=\"Submit\">\
    </form>\
    <h1>POST form data to /postform/</h1><br>\
    <form method=\"post\" enctype=\"application/x-www-form-urlencoded\" action=\"/postform/\">\
      <input type=\"text\" name=\"hello\" value=\"world\"><br>\
      <input type=\"submit\" value=\"Submit\">\
    </form>\
  </body>\
</html>";


const char *page1 = ""
"<!DOCTYPE HTML>\n"
"<html lang=\"en\">\n"
"<head>\n"
"    <title>Robosheep</title>\n"
"    <meta charset=\"utf-8\"/>\n"
"    <!-- <meta http-equiv=\"refresh\" content=\"5\">-->\n"
"    <style>\n"
"        #motor_speed_bars {\n"
"            width: 600px;\n"
"            padding: 10px;\n"
"            background-color: grey;\n"
"        }\n"
"\n"
"        button {\n"
"            height: 80px;\n"
"            width: 200px;\n"
"        }\n"
"\n"
"        #speedBar {\n"
"            color: green;\n"
"        }\n"
"\n"
"        .progress-bar-vertical {\n"
"            width: 30px;\n"
"            min-height: 100px;\n"
"            display: flex;\n"
"            align-items: flex-end;\n"
"            margin-right: 20px;\n"
"            float: left;\n"
"\n"
"        }\n"
"\n"
"        .progress-bar-vertical .progress-bar {\n"
"            width: 100%;\n"
"            height: 0;\n"
"            color: black;\n"
"            -webkit-transition: height 0.6s ease;\n"
"            -o-transition: height 0.6s ease;\n"
"            transition: height 0.6s ease;\n"
"        }\n"
"\n"
"    </style>\n"
"</head>\n"
"<body>\n"
"\n"
"<link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n"
"\n"
"<h1>Motordriver (Ver. 0.9)</h1>\n"
"\n"
"<div style=\"margin-right: auto; margin-left: auto; width: 602px; border: 1px solid black;\">\n"
"    <h2>Robosheep Status</h2>\n"
"    <div id=\"motor_speed_bars\">\n"
"\n"
"        <div>M1___M2__RSSI__PWR </div>\n"
"        <div class=\"progress progress-bar-vertical\">\n"
"            <div id=\"motorBar1\" class=\"progress-bar\" role=\"progressbar\" style=\"height: 50%;\" aria-valuenow=\"50\"\n"
"                 aria-valuemin=\"0\" aria-valuemax=\"100\">0%\n"
"            </div>\n"
"        </div>\n"
"\n"
"        <div class=\"progress progress-bar-vertical\">\n"
"            <div id=\"motorBar2\" class=\"progress-bar\" role=\"progressbar\" style=\"height: 50%;\" aria-valuenow=\"50\"\n"
"                 aria-valuemin=\"0\" aria-valuemax=\"100\">0%\n"
"            </div>\n"
"        </div>\n"
"\n"
"        <div class=\"progress progress-bar-vertical\">\n"
"            <div id=\"signalStrength\" class=\"progress-bar\" role=\"progressbar\" style=\"height: 0%;\" aria-valuenow=\"0\"\n"
"                 aria-valuemin=\"0\" aria-valuemax=\"100\">0%\n"
"            </div>\n"
"        </div>\n"
"\n"
"        <div class=\"progress progress-bar-vertical\">\n"
"            <div id=\"powerSupply\" class=\"progress-bar\" role=\"progressbar\" style=\"height: 0%;\" aria-valuenow=\"0\"\n"
"                 aria-valuemin=\"0\" aria-valuemax=\"100\">0%\n"
"            </div>\n"
"        </div>\n"
"        <br>\n"
"        <br>\n"
"        <br>\n"
"        <br>\n"
"        <br>\n"
"        <br>\n"
"\n"
"    </div>\n"
"    <p id=\"sheep_state\">sheep_state</p>\n"
"</div>\n"
"\n"
"<div style=\"width: 602px; margin: auto; border: 1px solid black;\">\n"
"    <h2>Joystick</h2>\n"
"\n"
"    <div id=\"joystick\"\n"
"         style=\"position:relative;\n"
"            border: 1px solid black;\n"
"            width: 600px;\n"
"            height: 600px;\n"
"            -webkit-border-radius: 300px;\n"
"            -moz-border-radius: 300px;\n"
"            border-radius: 300px;\n"
"            background: green;\">\n"
"        <img id=\"ball\" src=\"https://en.js.cx/clipart/ball.svg\"\n"
"             style=\"position:absolute;\n"
"                     top:260px; left:260px; width:80px; height:80px;\"/>\n"
"    </div>\n"
"\n"
"</div>\n"
"\n"
"<div style=\"width: 608px; margin: auto; border: 1px solid black;\">\n"
"    <h2>Control</h2>\n"
"    <TABLE>\n"
"        <TR>\n"
"            <TD>\n"
"                <p><label for=\"enableMotor\">Enable Motor: </label><input style=\"height:20px;width:20px\" type=\"checkbox\"\n"
"                                                                         id=\"enableMotor\"></p>\n"
"            </TD>\n"
"            <TD>\n"
"                <button onclick=\"forward()\">forward</button>\n"
"            </TD>\n"
"            <TD></TD>\n"
"        </TR>\n"
"        <TR>\n"
"            <TD>\n"
"                <button onclick=\"left()\">left</button>\n"
"            </TD>\n"
"            <TD>\n"
"                <button onclick=\"stop()\">stop</button>\n"
"            </TD>\n"
"            <TD>\n"
"                <button onclick=\"right()\">right</button>\n"
"            </TD>\n"
"        </TR>\n"
"        <TR>\n"
"            <TD></TD>\n"
"            <TD>\n"
"                <button onclick=\"backward()\">backward</button>\n"
"            </TD>\n"
"            <TD></TD>\n"
"        </TR>\n"
"        <TR>\n"
"            <TD>\n"
"                <button onclick=\"speed1()\">speed1</button>\n"
"            </TD>\n"
"            <TD>\n"
"                <button onclick=\"speed2()\">speed2</button>\n"
"            </TD>\n"
"            <TD>\n"
"                <button onclick=\"speed3()\">speed3</button>\n"
"            </TD>\n"
"        </TR>\n"
"\n"
"    </TABLE>\n"
"\n"
"</div>\n"
"\n"
"<!--\n"
"<div style=\"display: table-cell; border: 1px solid black;\">\n"
"-->\n"
"<div style=\"width: 600px; margin: auto; border: 1px solid black;\">\n"
"    <h2>Log</h2>\n"
"    <p id=\"log\">log</p>\n"
"</div>\n"
"\n"
"<p id=\"demo\">demo</p>\n"
"\n"
"<script>\n"
"\n"
"    //\n"
"    // global vars\n"
"    //\n"
"    let ip = location.host;\n"
"    if (location.host == \"localhost:63342\") ip = \"192.168.1.30\";\n"
"    console.log(\"communication with ip: \" + ip)\n"
"\n"
"    const url_sheep_state = \"http://\" + ip + \"/sheep/state\";\n"
"    const url_sheep_move = \"http://\" + ip + \"/sheep/move\";\n"
"    const url_motor = \"http://\" + ip + \"/motor\";\n"
"    var speed = 0;\n"
"    console.log(\"speed set to \" + speed);\n"
"\n"
"    //\n"
"    // motor bars\n"
"    //\n"
"    const motor_speed_bars = document.getElementById(\"motor_speed_bars\")\n"
"    const speedBar = document.getElementById('speedBar');\n"
"    const motorBar1 = document.getElementById('motorBar1');\n"
"    const motorBar2 = document.getElementById('motorBar2');\n"
"\n"
"    const sheepStateCtrl = document.getElementById('sheep_state');\n"
"    const logger = document.getElementById('log');\n"
"\n"
"    const startX = ball.getBoundingClientRect().left;\n"
"    const startY = ball.getBoundingClientRect().top;\n"
"\n"
"\n"
"    motor_speed_bars.onmousedown = function (event) {\n"
"        console.log(\"onmousedown: \" + event.button)\n"
"    }\n"
"\n"
"    /*\n"
"    Update progress bars that indicate motor speed.\n"
"    Values are between -100 and 100.\n"
"     */\n"
"    function updateMotorBars(m1, m2) {\n"
"        if (m1 < -100 || m1 > 100 || m2 < -100 || m2 > 100) {\n"
"            console.error(\"Called updateMotorBars(\" + m1 + \",\" + m2 + \") with invalid values.\")\n"
"            return\n"
"        }\n"
"        updateMotorBar(motorBar1, m1);\n"
"        updateMotorBar(motorBar2, m2);\n"
"    }\n"
"\n"
"    function updateMotorBar(motorBar, value) {\n"
"        width = (100 + value)/2;\n"
"        motorBar.style.height = width+'%';\n"
"        motorBar.innerHTML = value+'%';\n"
"        if (value < 0){\n"
"            motorBar.style.backgroundColor = \"red\";\n"
"        }else{\n"
"            motorBar.style.backgroundColor = \"green\";\n"
"        }\n"
"    }\n"
"\n"
"    function updateRssiCtrl(sheep_state){\n"
"        let rssiValue = parseInt(sheep_state['rssi']);\n"
"        let barHeight = 100 + rssiValue;\n"
"        const signalStrengthCtrl = document.getElementById('signalStrength');\n"
"        signalStrengthCtrl.style.height = barHeight+'%';\n"
"        signalStrengthCtrl.innerHTML = rssiValue + 'dBm';\n"
"    }\n"
"\n"
"    function updatePwrCtrl(sheep_state){\n"
"        let powerValue = parseInt(sheep_state['power']);\n"
"        let barHeight = powerValue / 24 * 100;\n"
"        if (barHeight > 100) barHeight = 100;\n"
"        let voltage = (powerValue / 10.0).toFixed(1);\n"
"        const powerSupplyCtrl = document.getElementById('powerSupply');\n"
"        powerSupplyCtrl.style.height = barHeight+'%';\n"
"        powerSupplyCtrl.innerHTML = voltage + 'V';\n"
"        //console.log(\"Voltage: \" + voltage)\n"
"    }\n"
"\n"
"\n"
"    //\n"
"    // update sheep state\n"
"    //\n"
"    const intervalID = setInterval(function () {\n"
"        const Http = new XMLHttpRequest();\n"
"        Http.open(\"GET\", url_sheep_state);\n"
"        Http.responseType = 'json';\n"
"        Http.send();\n"
"        Http.onreadystatechange = function () {\n"
"            if (this.readyState === 4 && this.status === 200) {\n"
"                let sheep_state = Http.response\n"
"                updateMotorBars(parseInt(sheep_state['m1']), parseInt(sheep_state['m2']));\n"
"                updateRssiCtrl(sheep_state);\n"
"                updatePwrCtrl(sheep_state);\n"
"                sheepStateCtrl.innerHTML = JSON.stringify(sheep_state);\n"
"            }\n"
"        }\n"
"    }, 1000);\n"
"\n"
"\n"
"    /*\n"
"     * send command to sheep\n"
"     */\n"
"    let awaitingRequest = false;\n"
"    function sendCommand(speed, direction) {\n"
"\n"
"        // ensure, there is a delay of at least 1000ms between consecutive commands\n"
"        if (awaitingRequest) return;\n"
"        awaitingRequest = true;\n"
"        setTimeout(function (){\n"
"            awaitingRequest = false;\n"
"        }, 1000)\n"
"\n"
"\n"
"        let sum = direction + speed\n"
"        let diff = direction - speed\n"
"\n"
"        if (Math.abs(sum) > 100 || Math.abs(diff) > 100) {\n"
"            console.log(\"motor speeds to high\")\n"
"            return\n"
"        }\n"
"\n"
"        // call server\n"
"        let url = url_sheep_move + \"?speed=\" + speed + \"&dir=\" + direction\n"
"        console.log(\"Sending: \" + url );\n"
"        const Http = new XMLHttpRequest();\n"
"        Http.open(\"GET\", url);\n"
"        Http.responseType = 'json';\n"
"        Http.send();\n"
"        Http.onreadystatechange = function () {\n"
"            if (this.readyState === 4 && this.status === 200) {\n"
"                let sheep_state = Http.response\n"
"                updateMotorBars(parseInt(sheep_state['m1']), parseInt(sheep_state['m2']));\n"
"            }\n"
"        }\n"
"    }\n"
"\n"
"\n"
"    //\n"
"    // ball\n"
"    //\n"
"    ball.onmousedown = function (event) {\n"
"\n"
"        let shiftX = event.clientX - ball.getBoundingClientRect().left;\n"
"        let shiftY = event.clientY - ball.getBoundingClientRect().top;\n"
"\n"
"        ball.style.position = 'absolute';\n"
"        ball.style.zIndex = '1000';\n"
"        document.body.append(ball);\n"
"\n"
"        moveAt(event.pageX, event.pageY);\n"
"\n"
"        // moves the ball at (pageX, pageY) coordinates\n"
"        // taking initial shifts into account\n"
"        function moveAt(pageX, pageY) {\n"
"\n"
"            //\n"
"            // move ball image\n"
"            //\n"
"            ball.style.left = pageX - shiftX + 'px';\n"
"            ball.style.top = pageY - shiftY + 'px';\n"
"\n"
"            // calc displacement\n"
"            let displaceX = -Math.trunc((pageX - startX - shiftX) / 3);\n"
"            let displaceY = -Math.trunc((pageY - startY - shiftY) / 3);\n"
"            var msg = \"Touch displace \" + displaceX + \"/\" + displaceY;\n"
"            console.log(msg);\n"
"            logger.innerHTML = msg;\n"
"\n"
"            let speed = displaceY;\n"
"            let dir = -displaceX;\n"
"            sendCommand(speed, dir)\n"
"        }\n"
"\n"
"        function onMouseMove(event) {\n"
"            moveAt(event.pageX, event.pageY);\n"
"        }\n"
"\n"
"        // move the ball on mousemove\n"
"        document.addEventListener('mousemove', onMouseMove);\n"
"\n"
"        // drop the ball, remove unneeded handlers\n"
"        ball.onmouseup = function () {\n"
"            document.removeEventListener('mousemove', onMouseMove);\n"
"            ball.onmouseup = null;\n"
"            ball.style.left = startX + 'px';\n"
"            ball.style.top = startY + 'px';\n"
"\n"
"            awaitingRequest = false;\n"
"            sendCommand(0,0);\n"
"        };\n"
"\n"
"    };\n"
"\n"
"    /*\n"
"     * see also (https://www.mediaevent.de/javascript/touch-events.html)\n"
"     */\n"
"    ball.ontouchmove = function (e) {\n"
"        // grab the location of touch\n"
"        var touchLocation = e.targetTouches[0]; // erster finger\n"
"\n"
"        // assign box new coordinates based on the touch.\n"
"        //ball.style.left = touchLocation.pageX + 'px';\n"
"        //ball.style.top = touchLocation.pageY + 'px';\n"
"\n"
"        // calc displacement\n"
"        let displaceX = Math.trunc((startX - touchLocation.pageX) / 3);\n"
"        let displaceY = Math.trunc((startY - touchLocation.pageY) / 3);\n"
"        console.log(\"Touch displace \" + displaceX + \"/\" + displaceY);\n"
"\n"
"        var msg = \"Touch displace \" + displaceX + \"/\" + displaceY;\n"
"        logger.innerHTML = msg;\n"
"\n"
"        let speed = displaceY;\n"
"        let dir = -displaceX;\n"
"        sendCommand(speed, dir)\n"
"    }\n"
"\n"
"    ball.ontouchend = function (e) {\n"
"        sendCommand(0, 0)\n"
"    }\n"
"\n"
"    /*\n"
"    * Disable context menu\n"
"    */\n"
"    window.oncontextmenu = function (event) {\n"
"        event.preventDefault();\n"
"        event.stopPropagation();\n"
"        return false;\n"
"    };\n"
"\n"
"    ball.ondragstart = function () {\n"
"        return false;\n"
"    };\n"
"\n"
"    function speed1() {\n"
"        speed = 12;\n"
"        console.log(\"speed set to \" + speed);\n"
"    }\n"
"\n"
"    function speed2() {\n"
"        speed = 25;\n"
"        console.log(\"speed set to \" + speed);\n"
"    }\n"
"\n"
"    function speed3() {\n"
"        speed = 100;\n"
"        console.log(\"speed set to \" + speed);\n"
"    }\n"
"\n"
"    function stop() {\n"
"        sendCommand(0, 0);\n"
"    }\n"
"\n"
"    function forward() {\n"
"        sendCommand(speed, 0)\n"
"    }\n"
"\n"
"    function left() {\n"
"        sendCommand(0, -speed);\n"
"    }\n"
"\n"
"    function right() {\n"
"        sendCommand(0, speed);\n"
"    }\n"
"\n"
"    function backward() {\n"
"        sendCommand(-speed, 0)\n"
"    }\n"
"\n"
"    var offsetX;\n"
"    var offsetY;\n"
"    var x;\n"
"    var y;\n"
"\n"
"    function stop() {\n"
"        offsetX = 0;\n"
"        offsetY = 0;\n"
"        x = 0;\n"
"        y = 0;\n"
"        sendCommand(0, 0);\n"
"    }\n"
"\n"
"</script>\n"
"</body>\n"
"</html>\n"
;


#endif
